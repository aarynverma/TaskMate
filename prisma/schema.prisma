generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  role          String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  projects      Project[] @relation("UserProjects")
  emailVerified DateTime?
  image         String?

  taskAssignments TaskAssignment[] @relation("UserTaskAssignments")

  accounts Account[]
  sessions Session[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ownerId String
  owner   User   @relation(name: "UserProjects", fields: [ownerId], references: [id])

  tasks Task[]
}

model Task {
  id          String    @id @default(cuid())
  title       String
  description String?
  dueDate     DateTime?
  priority    String?
  status      String    @default("todo")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  projectId String
  project   Project @relation(fields: [projectId], references: [id])

  tags      TaskTag[]
  assignees TaskAssignment[]
}

model Tag {
  id    String  @id @default(cuid())
  name  String  @unique
  color String?

  tasks TaskTag[]
}

model TaskTag {
  taskId String
  tagId  String

  task Task @relation(fields: [taskId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@id([taskId, tagId])
}

model TaskAssignment {
  taskId String
  userId String

  task Task @relation(fields: [taskId], references: [id])
  user User @relation(name: "UserTaskAssignments", fields: [userId], references: [id])

  @@id([taskId, userId])
}
